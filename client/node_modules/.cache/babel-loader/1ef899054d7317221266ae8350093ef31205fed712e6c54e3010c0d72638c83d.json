{"ast":null,"code":"var _jsxFileName = \"/Users/tanishkamehta/Documents/Coding/projectfinal/client/src/components/AddPassengerBoardForm.jsx\",\n  _s = $RefreshSig$();\n// client/src/components/AddPassengerBoardForm.jsx\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddAirplaneForm.css'; // or your shared form CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddPassengerBoardForm() {\n  _s();\n  const navigate = useNavigate();\n  const [flightID, setFlightID] = useState('');\n  const [msg, setMsg] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg(''); // clear previous\n\n    try {\n      const res = await fetch('/api/passengers-board', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          flightID\n        })\n      });\n      const out = await res.json();\n      if (res.ok && out.status === 'success') {\n        // On success, auto‑redirect to the view page\n        navigate('/view-passengers-board');\n      } else {\n        // stay on form and show error\n        setMsg(`❌ ${out.error || 'Unknown error occurred'}`);\n      }\n    } catch (err) {\n      setMsg('❌ Unable to connect to server');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"passengers_board()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Flight ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: flightID,\n          onChange: e => setFlightID(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Board Passengers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: msg.startsWith('❌') ? 'error-message' : 'success-message',\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPassengerBoardForm, \"WzkwXt9xZICh2kGZ83yKbEccZ3E=\", false, function () {\n  return [useNavigate];\n});\n_c = AddPassengerBoardForm;\nvar _c;\n$RefreshReg$(_c, \"AddPassengerBoardForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AddPassengerBoardForm","_s","navigate","flightID","setFlightID","msg","setMsg","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","out","json","ok","status","error","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","startsWith","_c","$RefreshReg$"],"sources":["/Users/tanishkamehta/Documents/Coding/projectfinal/client/src/components/AddPassengerBoardForm.jsx"],"sourcesContent":["// client/src/components/AddPassengerBoardForm.jsx\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AddAirplaneForm.css';  // or your shared form CSS\n\nexport default function AddPassengerBoardForm() {\n  const navigate = useNavigate();\n  const [flightID, setFlightID] = useState('');\n  const [msg, setMsg] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setMsg('');  // clear previous\n\n    try {\n      const res = await fetch('/api/passengers-board', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ flightID })\n      });\n      const out = await res.json();\n\n      if (res.ok && out.status === 'success') {\n        // On success, auto‑redirect to the view page\n        navigate('/view-passengers-board');\n      } else {\n        // stay on form and show error\n        setMsg(`❌ ${out.error || 'Unknown error occurred'}`);\n      }\n    } catch (err) {\n      setMsg('❌ Unable to connect to server');\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2>passengers_board()</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Flight ID:</label>\n          <input\n            type=\"text\"\n            value={flightID}\n            onChange={e => setFlightID(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-actions\">\n          <button type=\"submit\">Board Passengers</button>\n        </div>\n      </form>\n\n      {msg && <p className={msg.startsWith('❌') ? 'error-message' : 'success-message'}>{msg}</p>}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}